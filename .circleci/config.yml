version: 2.1
executors:
  builder:
    working_directory: ~/tmp
    docker:
      - image: circleci/node:10.13.0
    resource_class: large
commands:
  build_storybook:
    steps:
      - restore_cache:
          keys:
            - node10.13.0-dependencies-{{ checksum "package.json" }}
            - node10.13.0-dependencies-
      - run: yarn install
      - run:
          name: "Generate storybook"
          command: export NODE_OPTIONS="--max-old-space-size=8192"; yarn build-storybook
      - run:
          name: "Post storybook"
          command: export CIRCLE_REPO_ID="159434216"; ./scripts/post_storybook.js
      - store_artifacts:
          path: ./storybook-static
          destination: ~/storybook
  restore_npm:
    steps:
      - restore_cache:
          keys:
            - node10.13.0-dependencies-{{ checksum "package.json" }}
            - node10.13.0-dependencies-
      - run: yarn install
  save_npm:
    steps:
      - save_cache:
          paths:
            - node_modules
          key: node10.13.0-dependencies-{{ checksum "package.json" }}
  install_awscli:
    steps:
      - run:
          name: Install python3
          command: sudo apt-get install python3-dev
      - run:
          name: Install pip3
          command: |
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            sudo python3 get-pip.py
      - run:
          name: Install awscli
          command: sudo pip3 install awscli --upgrade
jobs:
  lint:
    executor:
      name: builder
    docker:
      - image: circleci/node:10.13.0
        environment:
          REVIEWDOG_VERSION: "0.9.11"
    steps:
      - checkout
      - restore_npm
      - run: curl -fSL https://github.com/haya14busa/reviewdog/releases/download/$REVIEWDOG_VERSION/reviewdog_linux_amd64 -o reviewdog && chmod +x ./reviewdog
      - run: npx eslint -f=checkstyle 'src/**/*.{ts,tsx}' | tee -a /dev/stderr | ./reviewdog -f=checkstyle -diff="git diff" -reporter=github-pr-review
      - run: save_npm
  storybook:
    executor:
      name: builder
    docker:
      - image: circleci/node:10.13.0
        environment:
          REVIEWDOG_VERSION: "0.9.11"
    steps:
      - checkout
      - restore_npm
      - build_storybook
      - save_npm
  test:
    executor:
      name: builder
    steps:
      - checkout
      - restore_npm
      - run: yarn test
      - save_npm
  build-and-deploy: &build-and-deploy_ref
    parameters:
      environment:
        type: string
      cloudfront_distribution:
        type: string
      bucket:
        type: string
    executor:
      name: builder
    steps:
      - checkout
      - install_awscli
      - restore_npm
      - run:
          name: build
          command: yarn build:<< parameters.environment >>
          no_output_timeout: 60m
      - run:
          name: Set AWS region
          command: aws configure set region ap-northeast-1
      - run:
          name: Deploy
          command: |
            aws s3 cp build s3://<< parameters.bucket >>/v2 --recursive
            aws s3 cp build/index.html s3://<< parameters.bucket >>/v2/index.html --metadata-directive REPLACE --cache-control "max-age=300"
      - run:
          name: Cache clear
          command: aws cloudfront create-invalidation --distribution-id << parameters.cloudfront_distribution >> --path '/v2*'
  build-and-deploy-dev:
    <<: *build-and-deploy_ref
  build-and-deploy-dev2:
    <<: *build-and-deploy_ref
  build-and-deploy-dev3:
    <<: *build-and-deploy_ref
  build-and-deploy-stg:
    <<: *build-and-deploy_ref
  build-and-deploy-stg2:
    <<: *build-and-deploy_ref
  build-and-deploy-prod:
    parameters:
      environment:
        type: string
      cloudfront_distribution:
        type: string
      bucket:
        type: string
    executor:
      name: builder
    steps:
      - checkout
      - install_awscli
      - restore_npm
      - run:
          name: build
          command: yarn build:prod
          no_output_timeout: 60m
      - run:
          name: deploy
          command: |
            echo 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_PROD}' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_PROD}' >> $BASH_ENV
            source $BASH_ENV
            aws s3 cp build s3://<< parameters.bucket >>/v2 --recursive
            aws s3 cp build/index.html s3://<< parameters.bucket >>/v2/index.html --metadata-directive REPLACE --cache-control "max-age=300"
      - run:
          name: Cache clear
          command: |
            source $BASH_ENV
            aws cloudfront create-invalidation --distribution-id << parameters.cloudfront_distribution >> --path '/v2*'
workflows:
  version: 2
  test-build-and-deploy:
    jobs:
      - lint:
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
      - test:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - storybook:
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
      - build-and-deploy-dev:
          environment: dev
          bucket: dev-mgr.knowbe.jp
          cloudfront_distribution: E3EHUSFE76WRMC
          requires: [test]
          filters:
            tags:
              only: /^dev-v.*/
            branches:
              ignore: /.*/
      - build-and-deploy-dev2:
          environment: dev2
          bucket: dev2-mgr.knowbe.jp
          cloudfront_distribution: EAUM7IYDJUXUX
          requires: [test]
          filters:
            tags:
              only: /^dev2-v.*/
            branches:
              ignore: /.*/
      - build-and-deploy-dev3:
          environment: dev3
          bucket: dev3-mgr.knowbe.jp
          cloudfront_distribution: E38PX1WUNF82CZ
          requires: [test]
          filters:
            tags:
              only: /^dev3-v.*/
            branches:
              ignore: /.*/
      - build-and-deploy-stg:
          environment: stg
          bucket: stg-mgr.knowbe.jp
          cloudfront_distribution: E5CJ1G3Y2B2HM
          requires: [test]
          filters:
            tags:
              only: /^stg-v.*/
            branches:
              ignore: /.*/
      - build-and-deploy-stg2:
          environment: stg2
          bucket: stg2-mgr.knowbe.jp
          cloudfront_distribution: E3TOX0FOF4YA1F
          requires: [test]
          filters:
            tags:
              only: /^stg2-v.*/
            branches:
              ignore: /.*/
      - build-and-deploy-prod:
          environment: prod
          bucket: mgr.knowbe.jp
          cloudfront_distribution: E3T6K56DZOU1J
          requires: [test]
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
